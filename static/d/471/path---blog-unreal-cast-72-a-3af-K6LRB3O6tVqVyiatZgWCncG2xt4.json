{"data":{"site":{"siteMetadata":{"author":"Peter Leontev","title":"Peter Leontev - Generalist Programmer","disqusID":"peterleontev"}},"mdx":{"id":"a5ce4c62-fe13-556a-b7b8-d3384b00202e","excerpt":"When you write  Cast<T > (SomeObject)  in Unreal C++, is it any different to dynamic_cast<T >  in plain C++? Ofcourse it is because Unreal Engine C++ implementsâ€¦","code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"WIP, How Cast function works in Unreal Engine 4?\",\n  \"date\": \"2019-09-20\",\n  \"description\": \"And is it any better than dynamic_cast?\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"When you write \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Cast<T\", \">\", \"(SomeObject)\"), \" in Unreal C++, is it any different to dynamic_cast<T\", \">\", \" in plain C++? Ofcourse it is because Unreal Engine C++ implements a support for reflection system\"), mdx(\"p\", null, \"Function Cast<T\", \">\", \" is straightforward: \"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-cpp\"\n  }), \"template <typename To, typename From>\\nFORCEINLINE To* Cast(From* Src)\\n{\\n    return TCastImpl<From, To>::DoCast(Src);\\n}\\n\")), mdx(\"p\", null, \"As you can see \"));\n}\nMDXContent.isMDXComponent = true;"},"frontmatter":{"title":"WIP, How Cast function works in Unreal Engine 4?","date":"September 20, 2019","description":"And is it any better than dynamic_cast?"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/blog/unreal_cast/","previous":{"fields":{"slug":"/blog/level_streaming_optimization/"},"frontmatter":{"date":"2019-06-19","title":"Level Streaming And Garbage Collection Optimization Tweaks In Unreal Engine 4"}},"next":null}}