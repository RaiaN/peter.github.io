{"data":{"site":{"siteMetadata":{"author":"Peter Leontev"}},"markdownRemark":{"id":"c4d63596-824c-524e-be41-41c48aafc38f","excerpt":"Imagine the following situation in Unreal Engine 4 gameplay code: SoundSystem  can be invalid but what does that mean? Is is OK situation to just use IsValid…","html":"<p>Imagine the following situation in Unreal Engine 4 gameplay code:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">APlayer<span class=\"token operator\">::</span><span class=\"token function\">OnAttacked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    USoundSystem<span class=\"token operator\">*</span> SoundSystem <span class=\"token operator\">=</span> GameInstance<span class=\"token operator\">-></span><span class=\"token function\">GetSoundSystem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">IsValid</span><span class=\"token punctuation\">(</span>SoundSystem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        SoundSystem<span class=\"token operator\">-></span><span class=\"token function\">PlaySoundCue</span><span class=\"token punctuation\">(</span>OnAttackedSoundCue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>SoundSystem</strong> can be invalid but what does that mean? Is is OK situation to just use IsValid() and do nothing otherwise? This issue is more interesting that it seems.</p>\n<p>Good question to start with is if <strong>SoundSystem</strong> is not valid in OnAttacked() context then maybe we should tell someone about it? To do that one can use multiple methods: return values, delegates calling, writing some error message to log… but wait! <strong>SoundSystem</strong> is not valid! </p>\n<p>When a game system is not valid then what do we have to do? Well, let’s get an instance of that system because it should be created already, right? </p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">APlayer<span class=\"token operator\">::</span><span class=\"token function\">OnAttacked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    USoundSystem<span class=\"token operator\">*</span> SoundSystem <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">IsValid</span><span class=\"token punctuation\">(</span>SoundSystem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        SoundSystem <span class=\"token operator\">=</span> GameInstance<span class=\"token operator\">-></span><span class=\"token function\">GetSoundSystem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    SoundSystem<span class=\"token operator\">-></span><span class=\"token function\">PlaySoundCue</span><span class=\"token punctuation\">(</span>OnAttackedSoundCue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>But should we use IsValid() again just to be sure SoundSystem we’ve got is valid? It seems like we are going to have a infinite loop here.</p>\n<p>Another way to fix this problem is to put SoundSystem initialization into APlayer method that can guarantee SoundSystem is initialized:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">USoundSystem</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">APlayer</span> <span class=\"token operator\">:</span> AActor\n<span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n    <span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    USoundSystem<span class=\"token operator\">*</span> SoundSystem<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nAPlayer<span class=\"token operator\">::</span><span class=\"token function\">APlayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    SoundSystem <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nAPlayer<span class=\"token operator\">::</span><span class=\"token function\">PostSoundSystemInitialize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    SoundSystem <span class=\"token operator\">=</span> GameInstance<span class=\"token operator\">-></span><span class=\"token function\">GetSoundSystem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nAPlayer<span class=\"token operator\">::</span><span class=\"token function\">OnAttacked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">IsValid</span><span class=\"token punctuation\">(</span>SoundSystem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        SoundSystem<span class=\"token operator\">-></span><span class=\"token function\">PlaySoundCue</span><span class=\"token punctuation\">(</span>OnAttackedSoundCue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The question is what if we don’t want to store SoundSystem pointer in APlayer? Imagine one has AEnemy, AEnemyTank, AEnemyTower instead of APlayer and all have to have ability to play sound cue. Also notice that we fixed our issue with checking SoundSystem pointer in OnAttacked() method but still don’t know what to do if it is somehow invalid.</p>\n<p>Happy reading!</p>","frontmatter":{"title":"Handling invalid C++ pointers","date":"April 21, 2019","description":"In this article I will briefly explain approaches to check if a pointer is valid and why it is important."}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/c++_pointers/","previous":{"fields":{"slug":"/motivation/"},"frontmatter":{"date":"2019-04-19T15-00","title":"Technical blog in 2019?"}},"next":null}}