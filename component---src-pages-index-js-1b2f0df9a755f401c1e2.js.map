{"version":3,"sources":["webpack:///./src/components/blogLayout.js","webpack:///./src/pages/index.js","webpack:///./src/components/seo.js"],"names":["BlogLayout","render","children","this","props","React","Component","to","style","margin","marginBottom","rhythm","location","title","keywords","data","allMdx","edges","map","node","frontmatter","key","fields","slug","marginTop","boxShadow","scale","display","date","dangerouslySetInnerHTML","__html","description","pageQuery","SEO","lang","meta","site","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps"],"mappings":"wHAEMA,E,gLACJC,OAAA,WAAU,IACAC,EAAaC,KAAKC,MAAlBF,SAER,OACE,6BACE,8BAAOA,K,GANUG,IAAMC,WAYhBN,O,25BCPA,mBAAAI,GAAK,OAElB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMG,GAAG,UACP,wBAAIC,MAAO,CAACC,OAAQ,EAAGC,aAAcC,YAAO,KAA5C,SAEF,kBAAC,IAAD,CAAYC,SAAUR,EAAMQ,UAC1B,kBAAC,IAAD,CACEC,MAAM,OACNC,SAAU,CAAC,gBAAD,uBAEXV,EAAMW,KAAKC,OAAOC,MAAMC,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACxBN,EAAQM,EAAKC,YAAYP,MAC/B,OACE,yBAAKQ,IAAKF,EAAKG,OAAOC,KAAMf,MAAO,CAAEE,aAAcC,YAAO,KACxD,wBACEH,MAAO,CACHE,aAAc,EACdc,UAAW,IAGf,kBAAC,IAAD,CAAMhB,MAAO,CAAEiB,UAAU,QAAWlB,GAAIY,EAAKG,OAAOC,MACjDV,IAGL,uBACEL,MAAK,OACAkB,aAAM,KADN,IAEHC,QAAQ,QACRjB,aAAcC,YAAO,EAAE,GACvBa,UAAW,KAGZL,EAAKC,YAAYQ,MAEpB,6BACE,uBACEC,wBAAyB,CACvBC,OAAQX,EAAKC,YAAYW,uBAYpC,IAAMC,EAAS,c,mFC7CtB,SAASC,EAAT,GAA4D,IAA7CF,EAA4C,EAA5CA,YAAaG,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,KAAMrB,EAAmB,EAAnBA,SAAUD,EAAS,EAATA,MACxCuB,EADiD,OACjDA,KAaFC,EAAkBN,GAAeK,EAAKE,aAAaP,YAEzD,OACE,kBAAC,IAAD,CACEQ,eAAgB,CACdL,QAEFM,cAAa,QAAU3B,EACvBsB,KAAM,CACJ,CACEM,KAAK,cACLC,QAASL,GAEX,CACEM,SAAS,WACTD,QAAS7B,GAEX,CACE8B,SAAS,iBACTD,QAASL,GAEX,CACEM,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASN,EAAKE,aAAaM,QAE7B,CACEH,KAAK,gBACLC,QAAS7B,GAEX,CACE4B,KAAK,sBACLC,QAASL,IAGVQ,OACC/B,EAASgC,OAAS,EACd,CACEL,KAAK,WACLC,QAAS5B,EAASiC,KAAT,OAEX,IAELF,OAAOV,KAKhBF,EAAIe,aAAe,CACjBd,KAAK,KACLC,KAAM,GACNrB,SAAU,GACViB,YAAY,IAWCE,O","file":"component---src-pages-index-js-1b2f0df9a755f401c1e2.js","sourcesContent":["import React from \"react\"\r\n\r\nclass BlogLayout extends React.Component {\r\n  render() {\r\n    const { children } = this.props    \r\n\r\n    return (\r\n      <div>\r\n        <main>{children}</main>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BlogLayout\r\n","import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport BlogLayout from \"../components/blogLayout\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport { rhythm, scale } from \"../utils/typography\"\r\n\r\nexport default props =>\r\n(\r\n  <Layout>\r\n    <Link to=\"/blog/\">\r\n      <h3 style={{margin: 0, marginBottom: rhythm(2) }}>Blog</h3>\r\n    </Link>\r\n    <BlogLayout location={props.location}>\r\n      <SEO\r\n        title=\"Blog\"\r\n        keywords={[`unreal engine`, `blog`, `developers`]}\r\n      />\r\n      {props.data.allMdx.edges.map(({ node }) => {\r\n        const title = node.frontmatter.title\r\n        return (\r\n          <div key={node.fields.slug} style={{ marginBottom: rhythm(2) }}>\r\n            <h4\r\n              style={{\r\n                  marginBottom: 7,\r\n                  marginTop: 0\r\n              }}\r\n            >\r\n              <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\r\n                {title}\r\n              </Link>\r\n            </h4>\r\n            <p\r\n              style={{\r\n                ...scale(-1 / 5),\r\n                display: `block`,\r\n                marginBottom: rhythm(1/3),\r\n                marginTop: 0,\r\n              }}\r\n            >\r\n              {node.frontmatter.date}\r\n            </p>\r\n            <div>\r\n              <p\r\n                dangerouslySetInnerHTML={{\r\n                  __html: node.frontmatter.description,\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        )\r\n      })}\r\n    </BlogLayout>\r\n  </Layout>\r\n)\r\n\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n            description\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            description,\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      titleTemplate={`%s | ${title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ]\r\n        .concat(\r\n          keywords.length > 0\r\n            ? {\r\n                name: `keywords`,\r\n                content: keywords.join(`, `),\r\n              }\r\n            : []\r\n        )\r\n        .concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n"],"sourceRoot":""}